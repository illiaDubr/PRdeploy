events {
    worker_connections 1024; # Максимальное количество подключений на одного воркера
}

http {
    upstream backend {
        server PR_backend:9000; # PHP-FPM (Laravel) на порту 9000
    }

    upstream frontend {
        server frontend:3000;   # Фронтенд на порту 3000
    }

    server {
        listen 80;
        server_name 135.181.84.236;

        # ---------------------------------
        # Настройки для фронтенда
        # ---------------------------------
        location / {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "http://localhost:3000" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
                add_header Access-Control-Allow-Credentials "true" always;
                return 204;
            }

            add_header Access-Control-Allow-Origin "http://localhost:3000" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ---------------------------------
        # Настройки для API Laravel
        # ---------------------------------
        location /api/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "http://localhost:3000" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
                add_header Access-Control-Allow-Credentials "true" always;
                return 204;
            }

            add_header Access-Control-Allow-Origin "http://localhost:3000" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

            fastcgi_pass backend;
            fastcgi_index index.php;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME /var/www/public/index.php;
            fastcgi_param SCRIPT_NAME /index.php;
            fastcgi_param PATH_INFO $uri;
        }

        # ---------------------------------
        # Настройки для /sanctum/csrf-cookie
        # ---------------------------------
        location /sanctum/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "http://localhost:3000" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
                add_header Access-Control-Allow-Credentials "true" always;
                return 204;
            }

            add_header Access-Control-Allow-Origin "http://localhost:3000" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

            fastcgi_pass backend;
            fastcgi_index index.php;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME /var/www/public/index.php;
            fastcgi_param SCRIPT_NAME /index.php;
            fastcgi_param PATH_INFO $uri;
        }

        # ---------------------------------
        # Логи для отладки
        # ---------------------------------
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
}
